name: "install-kyverno-plugins"
description: "Install Kyverno Plugin"

runs:
  using: "composite"
  steps:
  - name: Checkout
    uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    with:
      ref: 'main'
      repository: "oscal-compass/compliance-to-policy-go"
      token: '${{ github.token }}'
      persist-credentials: false
      path: c2p-kyverno

  - name: Set up Go
    uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
    with:
      go-version: '1.24'
      cache: false
      check-latest: true

  - name: Build plugins
    working-directory: c2p-kyverno
    run: make build-plugins

  - name: Add to path
    working-directory: c2p-kyverno
    run: |
      cp ./bin/kyverno-plugin  $(go env GOPATH)/bin/kyverno-plugin
      echo $(go env GOPATH)/bin >> $GITHUB_PATH
    shell: bash

  - name: Generate manifest
    working-directory: c2p-kyverno
    shell: bash
    run: |
      checksum=$(sha256sum "$(go env GOPATH)/bin/kyverno-plugin" | cut -d ' ' -f 1 )
      cat >  "$(go env GOPATH)/bin/c2p-kyverno-manifest.json" << EOF
      {
        "metadata": {
          "id": "kyverno",
          "description": "Kyverno PVP Plugin",
          "version": "0.0.1",
          "types": [
            "pvp"
          ]
        },
        "executablePath": "kyverno-plugin",
        "sha256": "$checksum",
        "configuration": [
          {
            "name": "policy-dir",
            "description": "A directory where kyverno policies are located.",
            "required": true
          },
          {
            "name": "policy-results-dir",
            "description": "A directory where policy results are located",
            "required": true
          },
          {
            "name": "temp-dir",
            "description": "A temporary directory for policies",
            "required": true
          },
          {
            "name": "output-dir",
            "description": "The output directory for policies",
            "required": false,
            "default": "."
          }
        ]
      }
      EOF
